# AutoPAR Staging Environment Monitoring Configuration
# Specialized monitoring setup for staging.autopar.pitchai.net and its Docker container

# Environment settings
environment: "autopar-staging"
log_level: "INFO"
project: "autopar"
staging_environment: true

# AutoPAR Staging URLs for comprehensive monitoring
autopar_staging_urls:
  primary: "https://staging.autopar.pitchai.net"
  health_check: "https://staging.autopar.pitchai.net/health"
  api_base: "https://staging.autopar.pitchai.net/api"
  entry_point: "https://staging.autopar.pitchai.net/entry"
  static_assets: "https://staging.autopar.pitchai.net/static/styles.css"
  websocket: "wss://37.27.67.52:3101/ws"

# UI Testing settings for AutoPAR staging
ui_test_timeout: 90  # Extended for AutoPAR application complexity
browser_headless: true
screenshot_on_failure: true
test_retries: 2
autopar_specific_tests:
  - entry_page_load
  - websocket_connection
  - static_assets_loading
  - redirect_functionality

# Docker container monitoring - AutoPAR specific
docker_containers:
  # Currently stopped but should be monitored when running
  - "autopar-webapp-test"  # Port 3101
  - "autopar-redis"        # Port 6379
  - "autopar-rabbitmq"     # Port 5672, 15672
  
# Auto-discovery for dynamic container names
auto_discover_containers: true
container_name_patterns:
  - "autopar*"
  - "*autopar*"

# AutoPAR-specific log patterns and error detection
container_monitoring:
  log_retention_hours: 48  # Extended for staging analysis
  autopar_error_keywords:
    # Core application errors
    - "ERROR"
    - "FATAL" 
    - "Exception"
    - "failed"
    - "timeout"
    - "connection refused"
    - "database.*error"
    - "redis.*error"
    - "rabbitmq.*error"
    
    # HTTP status codes
    - "500"
    - "502"
    - "503" 
    - "504"
    - "401"
    - "403"
    - "404"
    
    # AutoPAR-specific errors
    - "PAR.*failed"
    - "analysis.*error"
    - "pipeline.*failed"
    - "model.*error"
    - "inference.*failed"
    - "3D.*model.*error"
    - "file.*conversion.*failed"
    - "GPU.*allocation.*failed"
    - "WebSocket.*connection.*failed"
    - "HTMX.*error"
    - "template.*error"
    - "static.*asset.*failed"
    - "authentication.*failed"
    - "session.*expired"
    
  # AutoPAR performance warning patterns
  autopar_warning_keywords:
    - "WARN"
    - "WARNING"
    - "slow.*query"
    - "high.*memory"
    - "high.*cpu"
    - "queue.*full"
    - "rate.*limit"
    - "retry"
    - "throttle"
    - "degraded.*performance"
    - "analysis.*slow"
    - "model.*loading.*slow"
    - "WebSocket.*reconnect"

# AutoPAR Health Check Configuration
health_checks:
  staging_webapp:
    url: "https://staging.autopar.pitchai.net"
    expected_status: 302  # Redirects to /entry
    timeout: 10
    
  staging_entry:
    url: "https://staging.autopar.pitchai.net/entry"
    expected_status: 200
    timeout: 15
    check_content: 
      - "AutoPAR Web App"
      - "HTMX"
      - "WebSocket"
      
  staging_static_assets:
    url: "https://staging.autopar.pitchai.net/static/styles.css"
    expected_status: 200
    timeout: 10

# AutoPAR-specific monitoring schedule
monitoring_schedule:
  test_schedule_cron: "0 */2 * * *"  # Every 2 hours for staging
  log_collection_interval: 1800      # 30 minutes
  health_check_interval: 600         # 10 minutes
  deep_analysis_cron: "0 6,14,22 * * *"  # 3 times daily

# Integration with existing Claude AI monitoring
claude_ai_integration:
  enable_autopar_analysis: true
  autopar_analysis_prompts:
    container_health: |
      Analyze the AutoPAR staging container health and performance:
      - Check for application startup errors
      - Monitor PAR analysis pipeline health  
      - Verify Redis and RabbitMQ connectivity
      - Assess resource usage patterns
      - Identify any AutoPAR-specific failure patterns
      
    website_performance: |
      Evaluate AutoPAR staging website performance:
      - Verify main entry point accessibility
      - Test WebSocket connectivity for real-time features
      - Check static asset loading (CSS, JS, images)
      - Monitor page load times and responsiveness
      - Assess HTMX and Alpine.js functionality
      
    error_analysis: |
      Perform deep analysis of AutoPAR staging errors:
      - Categorize errors by severity and component
      - Identify patterns in PAR analysis failures
      - Check for model inference issues
      - Monitor 3D model processing errors
      - Analyze user session and authentication problems

# AutoPAR-specific alert configuration
alerting:
  autopar_critical_alerts:
    - "autopar-webapp-test container not running"
    - "staging.autopar.pitchai.net not accessible"
    - "PAR analysis pipeline failures"
    - "Multiple 500 errors detected"
    - "WebSocket connection failures"
    - "Redis connectivity issues" 
    - "RabbitMQ connectivity issues"
    
  autopar_warning_alerts:
    - "High analysis processing times"
    - "Static asset loading delays"
    - "Memory usage above 80%"
    - "CPU usage sustained above 85%"
    - "WebSocket reconnection attempts"

# Telegram notification settings for AutoPAR
telegram:
  bot_token: "${TELEGRAM_BOT_TOKEN}"
  chat_id: "${TELEGRAM_CHAT_ID}"
  enabled: true
  autopar_message_prefix: "ü¶∑ AutoPAR Staging"
  notification_templates:
    all_good: |
      üü¢ **AutoPAR STAGING - ALL SYSTEMS HEALTHY**
      
      üìÖ **Check Time**: {timestamp}
      üåê **Website**: staging.autopar.pitchai.net ‚úÖ
      üê≥ **Containers**: All running normally ‚úÖ
      üîç **Analysis Pipeline**: Operational ‚úÖ
      üìä **Performance**: Within normal ranges ‚úÖ
      
      üéØ **Status**: AutoPAR staging environment operating normally
      
    errors_found: |
      üö® **AutoPAR STAGING - CRITICAL ISSUES DETECTED**
      
      üìÖ **Alert Time**: {timestamp}
      üéØ **Severity**: CRITICAL
      üåê **Environment**: staging.autopar.pitchai.net
      
      **üî• ISSUES FOUND:**
      {error_summary}
      
      **‚ö° IMMEDIATE ACTION REQUIRED**
      
    suspicious_patterns: |
      ‚ö†Ô∏è **AutoPAR STAGING - SUSPICIOUS PATTERNS**
      
      üìÖ **Alert Time**: {timestamp}  
      üéØ **Severity**: WARNING
      üåê **Environment**: staging.autopar.pitchai.net
      
      **üîç PATTERNS DETECTED:**
      {warning_summary}
      
      **üìã INVESTIGATION RECOMMENDED**

# Report and log output settings
output:
  reports_directory: "reports/autopar-staging"
  logs_directory: "logs/autopar-staging"
  structured_output: true
  autopar_report_format: "detailed"
  include_autopar_metrics: true
  save_container_logs: true
  save_website_screenshots: true

# Performance thresholds for AutoPAR staging
performance_thresholds:
  website_response_time_ms: 3000
  websocket_connection_time_ms: 2000
  static_asset_load_time_ms: 1500
  container_memory_usage_percent: 80
  container_cpu_usage_percent: 85
  error_rate_per_hour: 10
  analysis_processing_time_minutes: 15